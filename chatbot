from flask import Flask, request, jsonify
from flask_cors import CORS
import mysql.connector
from langchain_ollama import OllamaLLM
from langchain_core.prompts import ChatPromptTemplate
import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer

app = Flask(__name__)
CORS(app)  # Enable CORS for all routes

# MySQL configuration
db_config = {
    'user': 'root',  # Replace with your MySQL username
    'password': 'Gho@st.#1232@',  # Replace with your MySQL password
    'host': 'localhost',  # Replace with your MySQL host if needed
    'database': 'chatbot_db',  # Replace with your database name
}

# Connect to MySQL
def connect_db():
    try:
        conn = mysql.connector.connect(**db_config)
        return conn
    except mysql.connector.Error as err:
        print(f"Error: {err}")
        return None

# Insert conversation into MySQL
def store_conversation(user_input, chatbot_response):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()
        query = "INSERT INTO chat_history (user_input, chatbot_response) VALUES (%s, %s)"
        values = (user_input, chatbot_response)
        cursor.execute(query, values)
        conn.commit()
        cursor.close()
        conn.close()

# Retrieve conversation history from MySQL
def get_conversation_history():
    conn = connect_db()
    if conn:
        cursor = conn.cursor()
        query = "SELECT user_input, chatbot_response FROM chat_history ORDER BY id ASC"
        cursor.execute(query)
        rows = cursor.fetchall()
        cursor.close()
        conn.close()
        return rows
    return []

# LangChain setup
template = """
Answer the question below.

Here is the conversation history:{context}

Question:{question}

Answer:
"""

# Define the model name
model_name = "bablu"

model = OllamaLLM(model=model_name)
prompt = ChatPromptTemplate.from_template(template)
chain = prompt | model

# Define the chatbot's name
chatbot_name = "CodeBuddy"

# Preprocess user input using NLTK
def preprocess_input(user_input):
    # Tokenize the input
    tokens = word_tokenize(user_input)
    # Remove stopwords
    stop_words = set(stopwords.words('english'))
    filtered_tokens = [word for word in tokens if word.lower() not in stop_words]
    # Stem the tokens
    ps = PorterStemmer()
    stemmed_tokens = [ps.stem(word) for word in filtered_tokens]
    # Join tokens back into a string
    preprocessed_input = ' '.join(stemmed_tokens)
    return preprocessed_input


@app.route('/chat', methods=['POST'])
def chat():
    data = request.json
    user_input = data['message']
    
    # Retrieve and format conversation history
    history = get_conversation_history()
    context = "\n".join([f"User: {row[0]}\n{chatbot_name}: {row[1]}" for row in history])
    
    # Preprocess the user input
    preprocessed_input = preprocess_input(user_input)
    
    # Generate response using LangChain
    result = chain.invoke({"context": context, "question": preprocessed_input})
    chatbot_response = result.strip()
    
    # Store the conversation in the database
    store_conversation(user_input, chatbot_response)
    
    return jsonify({"response": chatbot_response})

if __name__ == "__main__":
    app.run(debug=True)
